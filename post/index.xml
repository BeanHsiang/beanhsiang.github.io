<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Innovation with tech</title>
    <link>https://beanhsiang.github.io/post/</link>
    <description>Recent content in Posts on Innovation with tech</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Tue, 06 Dec 2022 16:12:00 +0800</lastBuildDate><atom:link href="https://beanhsiang.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>ML.NET 2.0 更新内容</title>
      <link>https://beanhsiang.github.io/post/2022-12-06-mlnet-2_0-content/</link>
      <pubDate>Tue, 06 Dec 2022 16:12:00 +0800</pubDate>
      
      <guid>https://beanhsiang.github.io/post/2022-12-06-mlnet-2_0-content/</guid>
      <description>ML.NET v2.0 比较低调地在11月发布了，所有 ML.NET 2.0 和 Model Builder 的更新信息在此，可以从中了解到更多细节或实现，本文把值得关注的内容摘要出来。 新版本的 ML.NET 2.0 和 Model Builder 2022 目前都已发布。 Model Builder 中的文本分类场景 几个月前发布的文本分类 API 的预览版，使开发者能够训练对原始文本数据进行分类的自定义模型。它通过将 NAS-BERT 的 TorchSharp 实现集</description>
    </item>
    
    <item>
      <title>有关 ML.NET 深度学习的计划</title>
      <link>https://beanhsiang.github.io/post/2021-09-21-mlnet-deep-learning-plans/</link>
      <pubDate>Tue, 21 Sep 2021 16:43:00 +0800</pubDate>
      
      <guid>https://beanhsiang.github.io/post/2021-09-21-mlnet-deep-learning-plans/</guid>
      <description>ML.NET 最需要的功能之一是能够从零开始创建神经网络模型，以便在 ML.NET 中进行深度学习。ML.NET 团队已经采纳了用户调研的反馈，并制定了开始实施此功能的计划。 ML.NET 深度学习的现状 目前，ML.NET 没有一种方法可以创建神经网络，从零开始建立深度学习模型。然而，对于采用现有的深度学习模型并将其用于预</description>
    </item>
    
    <item>
      <title>ML.NET 代码速查手册，高清图手慢无！</title>
      <link>https://beanhsiang.github.io/post/2021-09-02-mlnet-cheatsheet/</link>
      <pubDate>Wed, 01 Sep 2021 22:15:00 +0800</pubDate>
      
      <guid>https://beanhsiang.github.io/post/2021-09-02-mlnet-cheatsheet/</guid>
      <description>ML.NET 是面向.NET开发人员的跨平台机器学习框架，它具备在联机或本地环境中将机器学习模型集成到 .NET 应用程序中的能力。 2002 年微软启动有一个研究项目命名为 TMSN，其意在“Test mining search and navigation”，后来它被改名为 TLC（The learning code）。ML.NET 正是派生自 TLC 库，最初被用于微</description>
    </item>
    
    <item>
      <title>ML.NET v1.6 中有趣的内容</title>
      <link>https://beanhsiang.github.io/post/2021-08-07-mlnet-1_6-interesting-content/</link>
      <pubDate>Sat, 07 Aug 2021 19:53:00 +0800</pubDate>
      
      <guid>https://beanhsiang.github.io/post/2021-08-07-mlnet-1_6-interesting-content/</guid>
      <description>ML.NET v1.6 发布有一段时间了，所有详细信息在此，可以了解到更多细节或实现，本文把比较新鲜有趣的内容摘要出来。 此版本中增加了很多东西，但它们确实注意到，添加的所有内容都没有中断更改。 支持 ARM 这次更新最令人兴奋的部分是对ARM架构的新支持。这将允许在 ML.NET 进行大多数场景的训练和推论项目。ARM架构</description>
    </item>
    
  </channel>
</rss>

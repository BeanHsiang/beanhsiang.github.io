<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Semantic Kernel on Innovation with tech</title>
    <link>https://beanhsiang.github.io/tags/Semantic-Kernel/</link>
    <description>Recent content in Semantic Kernel on Innovation with tech</description>
    <generator>Hugo</generator>
    <language>zh-Hans</language>
    <lastBuildDate>Wed, 02 Jul 2025 12:00:00 +0800</lastBuildDate>
    <atom:link href="https://beanhsiang.github.io/tags/Semantic-Kernel/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>构建高级多智能体 AI 工作流：利用 AutoGen 和 Semantic Kernel</title>
      <link>https://beanhsiang.github.io/post/2025-07-02-building-advanced-multi-agent-ai-workflows-by-leveraging-autogen-and-semantic-kernel/</link>
      <pubDate>Wed, 02 Jul 2025 12:00:00 +0800</pubDate>
      <guid>https://beanhsiang.github.io/post/2025-07-02-building-advanced-multi-agent-ai-workflows-by-leveraging-autogen-and-semantic-kernel/</guid>
      <description>&lt;p&gt;在这篇教程中，我将带你了解如何无缝集成 AutoGen 和 Semantic Kernel 与 Google 的 Gemini Flash 模型。我们首先设置 GeminiWrapper 和 SemanticKernelGeminiPlugin 类，将 Gemini 的生成能力与 AutoGen 的多智能体编排功能连接起来。接下来，我们配置专业智能体，包括代码审查员和创意分析师，展示如何利用 AutoGen 的 ConversableAgent API 结合 Semantic Kernel 的装饰器函数来进行文本分析、摘要生成、代码审查和创意问题解决。&lt;/p&gt;&#xA;&lt;p&gt;通过结合 AutoGen 强大的智能体框架和 Semantic Kernel 基于函数的方法，我们创建了一个高级 AI 助手，能够适应各种任务并提供结构化、可操作的见解。&lt;/p&gt;</description>
    </item>
    <item>
      <title>使用 Semantic Kernel 插件编排 AI 代理的技术深度解析</title>
      <link>https://beanhsiang.github.io/post/2025-05-08-a-technical-deep-dive-into-orchestrating-ai-agents-using-semantic-kernel-plugins/</link>
      <pubDate>Thu, 08 May 2025 12:00:00 +0800</pubDate>
      <guid>https://beanhsiang.github.io/post/2025-05-08-a-technical-deep-dive-into-orchestrating-ai-agents-using-semantic-kernel-plugins/</guid>
      <description>&lt;p&gt;在如今快速发展的 &lt;strong&gt;大型语言模型（LLM）&lt;/strong&gt; 领域，编排专门的 AI 代理已成为构建复杂认知系统的关键，这些系统能够进行复杂推理和任务执行。虽然功能强大，但协调多个具有独特能力和数据访问权限的代理会带来显著的工程挑战。微软的 Semantic Kernel（SK）通过其直观的插件系统为管理这种复杂性提供了强大的框架。本文将深入探讨如何利用 SK 插件实现高效的代理编排，并结合实际实现模式进行说明。&lt;/p&gt;</description>
    </item>
    <item>
      <title>使用 Semantic Kernel Python 集成 Google A2A协议</title>
      <link>https://beanhsiang.github.io/post/2025-04-18-google-a2a-protocol-integrated-using-semantic-kernel-python/</link>
      <pubDate>Fri, 18 Apr 2025 12:00:00 +0800</pubDate>
      <guid>https://beanhsiang.github.io/post/2025-04-18-google-a2a-protocol-integrated-using-semantic-kernel-python/</guid>
      <description>&lt;p&gt;Google的Agent-to-Agent（A2A）协议旨在实现不同AI代理之间的无缝互操作性。而微软的**Semantic Kernel（SK）**是一个开源平台，用于协调智能代理的交互。本文将介绍如何将Semantic Kernel代理集成到A2A生态系统中，并作为A2A服务器高效地路由代理调用到专业服务。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>

<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>RAFT on Innovation with tech</title>
    <link>https://beanhsiang.github.io/tags/RAFT/</link>
    <description>Recent content in RAFT on Innovation with tech</description>
    <generator>Hugo</generator>
    <language>zh-Hans</language>
    <lastBuildDate>Sun, 08 Sep 2024 12:00:00 +0800</lastBuildDate>
    <atom:link href="https://beanhsiang.github.io/tags/RAFT/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>检索增强微调：使用 GPT-4o 微调 GPT-4o mini 模型以适用于特定领域应用</title>
      <link>https://beanhsiang.github.io/post/2024-09-08-retrieval-augmented-fine-tuning-use-gpt-4o-to-fine-tune-gpt-4o/</link>
      <pubDate>Sun, 08 Sep 2024 12:00:00 +0800</pubDate>
      <guid>https://beanhsiang.github.io/post/2024-09-08-retrieval-augmented-fine-tuning-use-gpt-4o-to-fine-tune-gpt-4o/</guid>
      <description>&lt;p&gt;对企业来说，生成式AI最具影响力的应用之一是创建自然语言界面，这些界面已根据特定领域和使用场景的数据进行了定制，以提供更准确、更准确的响应。这意味着回答与银行、法律和医疗等特定领域相关的问题。&lt;/p&gt;&#xA;&lt;p&gt;我们经常谈到实现这一目标的两种方法：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;检索增强生成（RAG）：将这些文档存储在向量数据库中，在查询时根据它们与问题的语义相似度来检索文档，然后将它们作为LLM的上下文。&lt;/li&gt;&#xA;&lt;li&gt;监督微调（SFT）：在一组代表特定领域知识的提示和响应上对现有的基线模型进行训练。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;虽然大多数尝试使用RAG的组织都试图通过其内部知识库来扩展LLM的知识，但许多组织在没有进行显著优化的情况下未能达到预期效果。同样，精心挑选一个足够大且高质量的数据集用于微调也是一项具有挑战性的任务。这两种方法都有局限性：微调将模型限制在其已训练的数据上，使其容易受到近似和幻觉的影响，而RAG虽然可以使模型落地，但它仅根据查询与文档的语义接近程度来检索文档——这可能与查询无关，并导致给出的解释不充分。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
